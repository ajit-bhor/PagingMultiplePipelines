{
	"name": "NavigateAllPoints_Pipeline",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set Access Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.lookup_data",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy Point Specific Log Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set POINT_NAME",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"Authorization": {
											"value": "@variables('var_authorization_token')",
											"type": "Expression"
										},
										"X-TENANT-ID": "gdctest"
									}
								},
								"sink": {
									"type": "SqlServerSink"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RESTLogControllerAPIDataSet",
									"type": "DatasetReference",
									"parameters": {
										"PointID": {
											"value": "@string(item().PointID)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SqlServerTable3",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Copy Point Specific Log Data",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [
								{
									"name": "var_may_var",
									"value": "abc"
								}
							],
							"typeProperties": {
								"expression": {
									"value": "@bool(contains(activity('Copy Point Specific Log Data').output,'Access token expired'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Stored Procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[sp_insert_site_devices_points_log]",
											"storedProcedureParameters": {
												"DeviceID": {
													"value": {
														"value": "@int(variables('DEVICE_ID'))",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"DeviceName": {
													"value": {
														"value": "@string(variables('DEVICE_NAME'))",
														"type": "Expression"
													},
													"type": "String"
												},
												"error": {
													"value": {
														"value": "@string(activity('Copy Point Specific Log Data').output.errors)",
														"type": "Expression"
													},
													"type": "String"
												},
												"gmtLastLogTimeStamp": {
													"value": {
														"value": "'TimeStamp'",
														"type": "Expression"
													},
													"type": "String"
												},
												"PointID": {
													"value": {
														"value": "@int(variables('POINT_ID'))",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"PointName": {
													"value": {
														"value": "@string(variables('POINT_NAME'))",
														"type": "Expression"
													},
													"type": "String"
												},
												"SiteID": {
													"value": {
														"value": "@int(variables('SITE_ID'))",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"SiteName": {
													"value": {
														"value": "@string(variables('SITE_NAME'))",
														"type": "Expression"
													},
													"type": "String"
												},
												"TimeZone": {
													"value": {
														"value": "@string(variables('TIME_ZONE'))",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AllLogLinkedService",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "GetBearerToken",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": "http://192.168.114.134/uaa/auth?password=pass&username=administrator",
											"connectVia": {
												"referenceName": "SelfHostedIntegrationRuntimeReferenced",
												"type": "IntegrationRuntimeReference"
											},
											"method": "POST",
											"headers": {
												"Content-Type": "application/x-www-form-urlencoded",
												"X-TENANT-ID": "gdctest",
												"Accept": "application/json"
											},
											"body": "'none'",
											"linkedServices": [
												{
													"referenceName": "AuthenticationApiLinkedService",
													"type": "LinkedServiceReference"
												}
											],
											"datasets": []
										}
									},
									{
										"name": "Reset Access Token",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "GetBearerToken",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "var_authorization_token",
											"value": {
												"value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "Set SITE_ID",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SITE_ID",
								"value": {
									"value": "@string(item().SiteID)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set SITE_NAME",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set SITE_ID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SITE_NAME",
								"value": {
									"value": "@string(item().SiteName)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set TIMEZONE",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set SITE_NAME",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TIME_ZONE",
								"value": {
									"value": "@string(item().TimeZone)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set DEVICE_ID",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set TIMEZONE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DEVICE_ID",
								"value": {
									"value": "@string(item().DeviceID)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set DEVICE_NAME",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set DEVICE_ID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DEVICE_NAME",
								"value": {
									"value": "@string(item().DeviceName)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set POINT_ID",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set DEVICE_NAME",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "POINT_ID",
								"value": {
									"value": "@string(item().PointID)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set POINT_NAME",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set POINT_ID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "POINT_NAME",
								"value": {
									"value": "@string(item().PointName)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Update Temp Remaining PointIds",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_temp_remaining_pointids",
								"value": {
									"value": "@string(sub(int(variables('var_remaining_point_ids')),1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Reset Remaining PointIds",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Update Temp Remaining PointIds",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_remaining_point_ids",
								"value": {
									"value": "@variables('var_temp_remaining_pointids')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Temp Remaining",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Reset Remaining PointIds",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var_temp_remaining_pointids",
								"value": "0"
							}
						}
					]
				}
			},
			{
				"name": "Set Access Token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Remaining PointIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_authorization_token",
					"value": {
						"value": "@pipeline().parameters.Authorization_Token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Remaining PointIds",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "var_remaining_point_ids",
					"value": {
						"value": "@string(pipeline().parameters.var_parameter_remaining_point_ids)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"lookup_data": {
				"type": "array",
				"defaultValue": [
					{
						"rownumber": 11,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 231,
						"PointName": "HT Min Off Time"
					},
					{
						"rownumber": 12,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 232,
						"PointName": "CL Min On Time"
					},
					{
						"rownumber": 13,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 233,
						"PointName": "CL Min Off Time"
					},
					{
						"rownumber": 14,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 234,
						"PointName": "Spare 7013"
					},
					{
						"rownumber": 15,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 235,
						"PointName": "HT Curtail Stgs"
					},
					{
						"rownumber": 16,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 236,
						"PointName": "CL Curtail Stgs"
					},
					{
						"rownumber": 17,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 237,
						"PointName": "Heat Lockout En"
					},
					{
						"rownumber": 18,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 238,
						"PointName": "Cool Lockout En"
					},
					{
						"rownumber": 19,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 239,
						"PointName": "ReclHTDehumStgs"
					},
					{
						"rownumber": 20,
						"SiteID": 7,
						"SiteName": "Site Kennesaw",
						"TimeZone": "America/New_York",
						"DeviceID": 208,
						"DeviceName": "abc2",
						"PointID": 240,
						"PointName": "Aux Heat Dehum"
					}
				]
			},
			"Authorization_Token": {
				"type": "string",
				"defaultValue": "0"
			},
			"var_parameter_remaining_point_ids": {
				"type": "string",
				"defaultValue": "0"
			}
		},
		"variables": {
			"temp": {
				"type": "String",
				"defaultValue": "0"
			},
			"temp_2": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_authorization_token": {
				"type": "String",
				"defaultValue": "0"
			},
			"SITE_ID": {
				"type": "String",
				"defaultValue": "0"
			},
			"SITE_NAME": {
				"type": "String",
				"defaultValue": "0"
			},
			"TIME_ZONE": {
				"type": "String",
				"defaultValue": "0"
			},
			"DEVICE_ID": {
				"type": "String",
				"defaultValue": "0"
			},
			"DEVICE_NAME": {
				"type": "String",
				"defaultValue": "0"
			},
			"POINT_ID": {
				"type": "String",
				"defaultValue": "0"
			},
			"POINT_NAME": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_remaining_point_ids": {
				"type": "String",
				"defaultValue": "0"
			},
			"var_temp_remaining_pointids": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"annotations": []
	}
}